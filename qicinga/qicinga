#!/usr/bin/env python

# qicinga - quick icinga commandline status display

import urllib2
from optparse import OptionParser
import logging
import sys
import pprint
try:
    import simplejson as json
except ImportError:
    import json
from myvars import * # Temp

logging.basicConfig()
logger = logging.getLogger()

colmap = {
    'NORM'      : '\033[0m',
    'CRITICAL'  : '\033[31;1m',
    'WARNING'   : '\033[33;1m',
    'OK'        : '\033[32;1m'
}

def get_page(ic_url, user, pw):
    '''reads icinga all status page and returns in json'''
    json_all_hosts_services = 'cgi-bin/status.cgi?host=all&style=detail&jsonoutput'
    url = ic_url + json_all_hosts_services
    logger.debug('url: ' + url)
    # authenticate
    passman = urllib2.HTTPPasswordMgrWithDefaultRealm()
    passman.add_password(None, url, user, pw)
    urllib2.install_opener(urllib2.build_opener(urllib2.HTTPBasicAuthHandler(passman)))
    req = urllib2.urlopen(url)
    data = req.read()
    return data

def read_json(icinga_json):
    '''parse json into data structure'''
    icinga_status = json.loads(icinga_json)
    return icinga_status


def main():
    logger.setLevel(logging.INFO)
    parser = OptionParser()
    parser.add_option("-a", "--all", help="show all statuses",
                      action="store_true", dest="showall", default=False)
    parser.add_option("-c", help="colour output",
                      action="store_true", dest="colour", default=False)
    (options, args) = parser.parse_args()
    rc = 0
    data = get_page(icinga_url, username, password)
    icinga_status = read_json(data)
    logger.debug(pprint.pformat(icinga_status))
    for svc in icinga_status['status']['service_status']:
        status = svc['status']
        if status != 'OK' or options.showall is True:
            if status != 'OK': rc = 1
            if options.colour: status = colmap[status] + status + colmap['NORM']
            print "[%s]: %s - %s (%s)" % (status, svc['host_display_name'],
                                       svc['service_description'], svc['status_information'])
    sys.exit(rc)

if __name__ == '__main__':
    main()