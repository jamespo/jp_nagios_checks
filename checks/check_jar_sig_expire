#!/usr/bin/python

# check_init_service ; -*-Python-*-
# a simple nagios check to verify if given signed jar is close to expiry
# Copyright James Powell 2013 / jamespo [at] gmail [dot] com
# This program is distributed under the terms of the GNU General Public License v3

import sys, re, os
from optparse import OptionParser

class CheckJarSigExpire(object):
    def __init__(self, options):
        self.options = options

    def checkjar(self):
        '''check jar expiry time'''
        cmdline = self.options.jspath + ' -verify -verbose -certs ' + \
          self.options.jar + ' 2>&1'
        jsresults = [line.strip() for line in os.popen(cmdline).readlines()]
        for line in jsresults:
            if 'jar is unsigned' in line:
                self.status = 'jar is unsigned'
                return 1
        self.status = 'jar is OK'
        return 0

def main():
    parser = OptionParser()
    parser.add_option("--jspath", dest="jspath", help="full path to jarsigner",
                      default="/usr/bin/jarsigner")
    parser.add_option("--jar", dest="jar", help="full path to jar")
    parser.add_option("-w", dest="dayswarn", help="warning threshold (days)",
                      default=30)
    # parser.add_option("-c", dest="dayscrit", help="critical threshold (days)",
    #                   default=7)
    (options, args) = parser.parse_args()
    if options.jar is None:
        print "UNKNOWN: No JAR specified"
        sys.exit(2)
    ci = CheckJarSigExpire(options)
    rc = ci.checkjar()
    if rc == 0:
        rcstr = 'OK: ' + ci.status
    else:
        rcstr = 'CRITICAL: ' + ci.status
    print rcstr
    sys.exit(rc)

if __name__ == '__main__':
    main()

